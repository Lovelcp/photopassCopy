GreenDao 教程

1.主项目的build.gradle中添加
    buildscript { 
        repositories { 
            jcenter() 
        } 

        dependencies { 
            classpath 'org.greenrobot:greendao-gradle-plugin:3.2.1' 
        } 
    }

2.modle中的build.gradle中添加

    apply plugin: 'org.greenrobot.greendao'

    compile 'org.greenrobot:greendao:3.2.0'

    greendao { 
        schemaVersion 1
        targetGenDir 'src/main/java'
        daoPackage 'com.pictureair.photopass.greendao'
    }

    * schemaVersion： 数据库schema版本，也可以理解为数据库版本号
    * daoPackage：设置DaoMaster 、DaoSession、Dao包名
    * targetGenDir：设置DaoMaster 、DaoSession、Dao目录
    * targetGenDirTest：设置生成单元测试目录
    * generateTests：设置自动生成单元测试用例

3.创建bean对象

    @Entity 
    public class PhotoBean { 
        @Id 
        private Long id; 
        private String name; 

        @Transient 
        private int tempUsageCount;
    }

    @Entity：make project 的时候，优先查找 @Entity，找到，则创建对应的类
    @Id：主键，自增长
    @NotNul：不能为空
    @Transient：不会在数据库中生成对应的列
    @Property：用于设置属性在数据库中的列名（默认不写就是保持一致）

4.make project，自动生成对应文件

    Bean：自动生成set get方法，封装类
    DaoMaster：主要数据库对 表 的操作
    DaoSession：每个表和DaoMaster连接的桥梁
    BeanDao：每个表实际操作的对象

5.Application中初始化

    private void setDatabase() { 
        //创建表
        DaoMaster.DevOpenHelper mHelper = new DaoMaster.DevOpenHelper(this, "photopass_info.db3");
        //打开对应的数据库，此处应该使用加密的数据库
        Database db = Common.USE_ENCRYPTED_DATABASE ? mHelper.getEncryptedWritableDb(PWJniUtil.getSqlCipherKey(Common.APP_TYPE_SHDRPP)) : mHelper.getWritableDb();
        // 注意：该数据库连接属于 DaoMaster，所以多个 Session 指的是相同的数据库连接。
        mDaoSession = new DaoMaster(db).newSession();
    }

    getEncryptedWritableDb：获取加密数据库
    getWritableDb：获取正常数据库